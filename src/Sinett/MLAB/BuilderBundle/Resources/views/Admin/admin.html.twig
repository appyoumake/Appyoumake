{% extends "::base.html.twig" %}

{% block title %}SinettMLABBuilderBundle:Admin:index{% endblock %}


{% block body %}

{% set currentPath = path(app.request.attributes.get('_route'),
                           app.request.attributes.get('_route_params')) %}

{% if  path('admin_apps') in currentPath  %}
	<h1>{% trans %}app.admin.apps.welcome{% endtrans %}</h1>
{% elseif  path('admin_users') in currentPath %}
	<h1>{% trans %}app.admin.users.welcome{% endtrans %}</h1>
{% elseif path('system') in currentPath %}
	<h1>{% trans %}app.system.admin.welcome{% endtrans %}</h1>
{% endif %}

	<div id="tabs_admin_apps">
	  <ul>
	  	{% for href, tab in tabs %}
	    	<li><a href="{{ path(href) }}">{% trans %}%tab%{% endtrans %}</a></li>
	    {% endfor %}
	  </ul>
	</div>
	<progress value="0" max="0" class="hidden"></progress>
{% endblock %}

{% block javascripts %}
	{{ parent() }}
	<script>
	
            
        function loadCategories(el, level) {
            if ( parseInt($(el).val()) == 0 || isNaN(parseInt($(el).val())) )  {
                if (level == 1 ) {
                    $("#sinett_mlab_builderbundle_user_categoryTwo").html("");
                    $("#sinett_mlab_builderbundle_user_categoryThree").html("");
                } else {
                    $("#sinett_mlab_builderbundle_user_categoryThree").html("");
                }
                return; 
            }
            if (level == 1 ) {
                $("#sinett_mlab_builderbundle_user_categoryTwo").html("<option>...loading...</option>");
                $("#sinett_mlab_builderbundle_user_categoryThree").html("<option>...loading...</option>");
            } else {
                $("#sinett_mlab_builderbundle_user_categoryThree").html("<option>...loading...</option>");
            }
            var url = "{{ path('category_load_categories', {id: '_ID_', level: '_LEVEL_'}) }}";
            url = url.replace("_ID_", $(el).val());
            url = url.replace("_LEVEL_", level);
            $.getJSON(url, function( data ) {
                if (data.result == "SUCCESS" ) {
                    if (data.level == 1 ) {
                        $("#sinett_mlab_builderbundle_user_categoryTwo").html(data.categories);
                        $("#sinett_mlab_builderbundle_user_categoryThree").html("");
                    } else {
                        $("#sinett_mlab_builderbundle_user_categoryThree").html(data.categories);
                    }
                }
            });
        }
    
    
		function progressHandlingFunction(e){
		    if(e.lengthComputable){
		        $('progress').attr({value:e.loaded,max:e.total});
		    }
		}
		
		function errorHandler(e) {
			console.log(e);
		}
/**
 * This function will send data back to the forms action using ajax
 * the result should be the index page which we display in the calling tab
 */
  		function assignSubmitDataHandler(dialog_id) {
  			$( "#" + dialog_id + " form").submit(function( event ) {
  				event.preventDefault();
  				$( "#" + dialog_id ).dialog( "close" );
  				
  				var form = $( this ),
			    	url = form.attr( "action" ),
  					formData = new FormData(this);
  				
  			    $.ajax({
  			        url: form.attr( "action" ),  //Server script to process data
  			        type: 'POST',
  			        xhr: function() {  // Custom XMLHttpRequest
  			            var myXhr = $.ajaxSettings.xhr();
  			            if(myXhr.upload){ // Check if upload property exists
  			                myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // For handling the progress of the upload 
  			            }
  			            return myXhr;
  			        },
  			        success: function( data ) {
  	  			    	if (data.result == 'FAILURE') {
                            if (typeof data.message != "undefined") {
                                alert(data.message);
                            } else {
                                alert("{% trans %}app.system.admin.alert.Unable.to.update.record{% endtrans %}");
                            }
  	  			    	} else {
  	  			    		if (data.action == 'ADD') {
                                $("#table_" + data.db_table + " tr:last").after(data.record);
                                $("#table_" + data.db_table + " tr:last").find("a").each(function () {
                                    prepare_links(this, $('#tabs_admin_apps  [id=ui-tabs-' + ($('#tabs_admin_apps').tabs('option','active') + 1) + ']').attr('id'));
                                    } // end function to run for each link  
                                ); // end each function 
                               
  	  			    		} else if (data.action == 'EDIT' || data.action == 'UPDATE') {
  	  			    			$("#row_" + data.db_table + "_" + data.db_id).replaceWith(data.record);
                                $("#row_" + data.db_table + "_" + data.db_id).find("a").each(function () {
                                    prepare_links(this, $('#tabs_admin_apps  [id=ui-tabs-' + ($('#tabs_admin_apps').tabs('option','active') + 1) + ']').attr('id'));
                                    } // end function to run for each link  
                                ); // end each function 
//hack to display updated category list which always return the whole list when added
  	  			    		} else if ($('#tabs_admin_apps').tabs('option','active') == 0) {
                                $('#ui-tabs-1').html(data);
                                $('#ui-tabs-1 .records_list').find("a").each(function () {
                                    prepare_links(this, "ui-tabs-1");
                                    } // end function to run for each link  
                                ); // end each function 
                            }                           
                            
  	  			    	}
  	  			  	},                        
  			        error: errorHandler,
  			        // Form data 
  			        data: formData,
  			        //Options to tell jQuery not to process data or worry about content-type. 
  			        cache: false,
  			        contentType: false,
  			        processData: false
  			    });

  			}); 
	  	}

/**
 * Initialises the tabs on this page
 */
 		$(document).ready(function() {
		    $( "#tabs_admin_apps" ).tabs({
		    	load: function( event, ui ) {
		    		$(ui.panel[0]).find("a").each(function () {
		    			prepare_links(this, $(ui.panel[0]).attr("id"));
		    			} // end function to run for each link  
		    		); // end each function 
		    	}, // end load parameters 
		    	
		      	beforeLoad: function( event, ui ) {
		        	ui.jqXHR.error(function() {
		          		ui.panel.html("{% trans %}app.system.admin.alert.waiting.to.load.data{% endtrans %}");
		        	});
		      	}
		    });
		});
		
        function prepare_links(element, ui_id) {
            var temp_url_elements = element.href.split("/");
            var this_link = temp_url_elements[temp_url_elements.length - 1];
            var this_id = temp_url_elements[temp_url_elements.length - 2];
            var this_entity = temp_url_elements[temp_url_elements.length - 3];
            $(element).bind( "click", {
                                    dialog_id: ui_id + "_dialog_" + this_link, 
                                    link: this_link,
                                    entity: this_entity,
                                    id: this_id
                                }, //end parameters to send to function that is bound 

        // this function is called when a link is clicked, the last parameter indicates action (new, delete, etc)
        // we use this to see what we should do 
                                function( event ) {
                                    event.preventDefault();
        // check if want to delete, then send request back. 
        //May be denied depending on what roles they have, if record is used for somethign etc.
                                    if ( event.data.link == "delete" ) { 
                                        if (confirm("{% trans %}app.system.admin.alert.delete.item{% endtrans %}")) {
                                            $.getJSON("{{ path('sinett_mlab_builder_homepage') }}" + event.data.entity + "/" + event.data.id + "/delete", function( data ) {
                                                if (data.result == "SUCCESS" && parseInt(data.db_id) > 0) {
        //treeviews use a div inside a list item, need to delete parent 
                                                    if ($("#row_" + data.db_table + "_" + data.db_id).prop('tagName').toLowerCase() == "div") {
                                                        $("#row_" + data.db_table + "_" + data.db_id).parent().remove();
                                                    } else {
                                                        $("#row_" + data.db_table + "_" + data.db_id).remove();
                                                    }
                                                } else {
                                                    alert("{% trans %}app.system.admin.alert.Unable.to.delete.record{% endtrans %}" + data.message);
                                                }
                                            });
                                        }
                                        
        // we have special case for toggle enabled
                                    } else if ( event.data.link == "toggle_state" ) {
                                        $.getJSON("{{ path('sinett_mlab_builder_homepage') }}" + event.data.entity + "/" + event.data.id + "/toggle_state", function( data ) {
                                            if (data.result == "SUCCESS" && parseInt(data.db_id) > 0) {
                                                $("#row_" + data.db_table + "_" + data.db_id).replaceWith(data.record);
                                                $("#row_" + data.db_table + "_" + data.db_id).find("a").each(function () {
                                                    prepare_links(this, $('#tabs_admin_apps  [id=ui-tabs-' + ($('#tabs_admin_apps').tabs('option','active') + 1) + ']').attr('id'));
                                                    } // end function to run for each link  
                                                ); // end each function 
                                            }
                                        });

        // not delete and dialog box is not created yet, so make new one and fill it 
                                    } else if ($("#" + event.data.dialog_id).length == 0 ) {  
                                        $('<div/>', { 'class': 'dlg_edit_data', 'id': event.data.dialog_id } )
                                            .load( $(this).attr('href'), function() { assignSubmitDataHandler(event.data.dialog_id); } )
                                            .appendTo('body')
                                            .dialog({modal: true});

        // need to reload data if edit record AND already created dialog box
                                    } else if ( event.data.link == "edit" ) {  
                                        $("#" + event.data.dialog_id).load( $(this).attr('href'), function() { assignSubmitDataHandler(event.data.dialog_id); $("#" + event.data.dialog_id).dialog().show(); } )

        // in all other cases just re-display dialog box, usually for new record
                                    } else { 
                                        if ($("#" + event.data.dialog_id + ' form').length > 0) {
                                            $("#" + event.data.dialog_id + ' form')[0].reset();
                                        }
                                        if (event.data.entity = "category") {
                                            $("#sinett_mlab_builderbundle_category_parent").val(event.data.id);
                                        }
                                        $("#" + event.data.dialog_id).dialog().show();
                                        
                                    } // end check if loaded 
                                } // end function to run when click 
                    ) // end bind call         
        }

    
	</script>
{% endblock %}
